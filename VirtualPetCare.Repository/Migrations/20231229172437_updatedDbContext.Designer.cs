// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using VirtualPetCare.Repository.Context;

#nullable disable

namespace VirtualPetCare.Repository.Migrations
{
    [DbContext(typeof(PetCareDbContext))]
    [Migration("20231229172437_updatedDbContext")]
    partial class updatedDbContext
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("VirtualPetCareAPI.Entities.HealthStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid>("PetId")
                        .HasColumnType("uuid");

                    b.Property<int>("PetId1")
                        .HasColumnType("integer");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PetId1");

                    b.ToTable("HealthStatuses");
                });

            modelBuilder.Entity("VirtualPetCareAPI.Entities.Pet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Pets");
                });

            modelBuilder.Entity("VirtualPetCareAPI.Entities.PetActivity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("PetId")
                        .HasColumnType("uuid");

                    b.Property<int>("PetId1")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PetId1");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("VirtualPetCareAPI.Entities.PetFood", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("PetId")
                        .HasColumnType("uuid");

                    b.Property<int>("PetId1")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PetId1");

                    b.ToTable("PetFoods");
                });

            modelBuilder.Entity("VirtualPetCareAPI.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "Ali12@gmail.com",
                            Name = "Ali"
                        },
                        new
                        {
                            Id = 2,
                            Email = "Mehmet@gmail.com",
                            Name = "Mehmet"
                        },
                        new
                        {
                            Id = 3,
                            Email = "ayşe@gmail.com",
                            Name = "Ayşe"
                        },
                        new
                        {
                            Id = 4,
                            Email = "zeynep@gmail.com",
                            Name = "Zeynep"
                        });
                });

            modelBuilder.Entity("VirtualPetCareAPI.Entities.HealthStatus", b =>
                {
                    b.HasOne("VirtualPetCareAPI.Entities.Pet", "Pet")
                        .WithMany()
                        .HasForeignKey("PetId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pet");
                });

            modelBuilder.Entity("VirtualPetCareAPI.Entities.Pet", b =>
                {
                    b.HasOne("VirtualPetCareAPI.Entities.User", null)
                        .WithMany("Pets")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("VirtualPetCareAPI.Entities.PetActivity", b =>
                {
                    b.HasOne("VirtualPetCareAPI.Entities.Pet", "Pet")
                        .WithMany()
                        .HasForeignKey("PetId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pet");
                });

            modelBuilder.Entity("VirtualPetCareAPI.Entities.PetFood", b =>
                {
                    b.HasOne("VirtualPetCareAPI.Entities.Pet", "Pet")
                        .WithMany()
                        .HasForeignKey("PetId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pet");
                });

            modelBuilder.Entity("VirtualPetCareAPI.Entities.User", b =>
                {
                    b.Navigation("Pets");
                });
#pragma warning restore 612, 618
        }
    }
}
